# Словарь для перевода цифр в слова
digit_to_word = {
    '0': 'ноль',
    '1': 'один',
    '2': 'два',
    '3': 'три',
    '4': 'четыре',
    '5': 'пять',
    '6': 'шесть',
    '7': 'семь',
    '8': 'восемь',
    '9': 'девять'
}


def number_to_words(n):
    """Переводит число в слова (каждую цифру отдельно)"""
    return ' '.join(digit_to_word[d] for d in str(n))


def is_valid_binary(s):
    """Проверяет, является ли строка корректным двоичным числом (без ведущих нулей, кроме 0)"""
    return all(c in '01' for c in s) and (s == '0' or not s.startswith('0'))


def process_file(filename):
    """Обрабатывает файл и выводит результаты"""
    current_sequence = []
    prev_number = None

    with open(filename, 'r') as file:
        for line in file:
            for token in line.split():
                if not is_valid_binary(token):
                    # Если токен не двоичное число - завершаем текущую последовательность
                    if current_sequence:
                        print(number_to_words(min(current_sequence)))
                        current_sequence = []
                        prev_number = None
                    continue

                decimal = int(token, 2)

                if decimal > 1024:
                    # Если число превышает 1024 - завершаем последовательность
                    if current_sequence:
                        print(number_to_words(min(current_sequence)))
                        current_sequence = []
                        prev_number = None
                    continue

                if prev_number is None or decimal > prev_number:
                    # Продолжаем последовательность
                    current_sequence.append(decimal)
                    prev_number = decimal
                else:
                    # Если последовательность нарушена - выводим минимум и начинаем новую
                    if current_sequence:
                        print(number_to_words(min(current_sequence)))
                    current_sequence = [decimal]
                    prev_number = decimal

    # Выводим минимум для последней последовательности (если есть)
    if current_sequence:
        print(number_to_words(min(current_sequence)))


# Запуск обработки файла input.txt
if __name__ == "__main__":
    process_file("input.txt")
